{"version":3,"sources":["contexts/WordpressClientContext.js","skeletons/Shimmer.js","skeletons/SkeletonElement.js","skeletons/SkeletonClients.js","components/Clients.js","contexts/WordpressInfoContext.js","skeletons/SkeletonConnect.js","components/Connect.js","components/Footer.js","contexts/ThemeContext.js","skeletons/SkeletonHome.js","components/Home.js","components/Logo.js","components/ThemeToggle.js","components/Navbar.js","contexts/WordpressWorkContext.js","skeletons/SkeletonWork.js","components/WorkGallery.js","components/Work.js","components/RouteChangeTracker.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["WordpressClientContext","createContext","WordpressClientContextProvider","props","useState","posts","setPosts","useEffect","setTimeout","a","fetch","response","ok","console","log","json","loadPost","Provider","value","children","Shimmer","className","SkeletonElement","type","classes","SkeletonClient","Overlay","lazy","Clients","displayedPosts","useContext","filter","post","acf","display","isVisible","setVisible","domRef","useRef","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","current","observe","unobserve","id","ref","map","src","logo","sizes","thumbnail","srcSet","medium","large","alt","client_name","length","n","SkeletonClients","fallback","title","WordpressInfoContext","WordpressInfoContextProvider","items","setItems","SkeletonConnect","Connect","sendLinkClickEvent","key","ReactGA","event","category","action","href","twitter","target","rel","onClick","facebook","linkedin","email","skype","Footer","Date","getFullYear","ThemeContext","initialState","isDarkTheme","localStorage","getItem","JSON","parse","themeReducer","state","ThemeContextProvider","isDark","setIsDark","storedTheme","themeSwitch","document","querySelector","checked","setItem","useReducer","dispatch","SkeletonHome","Header","Helmet","dangerouslySetInnerHTML","__html","mini_profile","to","Logo","width","height","fill","xmlns","fillRule","clipRule","d","ThemeToggle","theme","onChange","htmlFor","Navbar","location","useLocation","pathname","hash","WordpressWorkContext","WordpressWorkContextProvider","SkeletonWork","WorkGallery","activeIndex","project_shots","gallery","galleryScroller","galleryItemSize","clientWidth","addEventListener","scrollBy","client","project_type","shot","index","shots","Work","setActiveIndex","closeGallery","newValue","showWorkDetail","splash","withRouter","history","listen","set","page","pageview","initialize","App","name","content","Home","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","rootElement","getElementById","hasChildNodes","hydrate","URL","process","origin","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","render"],"mappings":"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","file":"static/js/main.a654b767.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\"\n\nexport const WordpressClientContext = createContext()\n\nconst WordpressClientContextProvider = (props) => {\n    const [posts, setPosts] = useState([])\n\n    useEffect(() => {\n        setTimeout(() => {\n            const loadPost = async () => {\n                const response = await fetch('https://pixldinc.link/pixldcms/wp-json/acf/v3/clients?page=1&per_page=15')\n\n                if(!response.ok) {\n                    console.log(`...not working`)\n                    return\n                }\n                const posts = await response.json()\n                setPosts(posts)\n            }\n\n            loadPost()\n        }, 0)\n    }, [])\n\n    // console.log(posts)\n\n    return (\n        <WordpressClientContext.Provider value={{ posts }}>\n            {props.children}\n        </WordpressClientContext.Provider>\n    )\n}\n\nexport default WordpressClientContextProvider","import React from 'react'\n\nconst Shimmer = () => {\n  return (\n    <div className=\"shimmer-wrapper\">\n      <div className=\"shimmer\"></div>\n    </div>\n  )\n}\n\nexport default Shimmer;","import React from 'react';\nimport './Skeleton.scss';\n\nfunction SkeletonElement({ type }) {\n  const classes = `skeleton ${type}`;\n\n  return (\n    <div className={classes}></div>\n  )\n}\n\nexport default SkeletonElement","import React from 'react'\nimport Shimmer from './Shimmer'\nimport SkeletonElement from './SkeletonElement'\n\nconst SkeletonClient = () => {\n\n  return (\n    <div className='skeleton-wrapper'>\n      <div className=\"skeleton-clients\">\n        <SkeletonElement type=\"client-item\" />\n      </div>\n      <Shimmer />\n    </div>\n  )\n}\n\nexport default SkeletonClient;","import React, { Suspense, lazy, useContext, useEffect, useState, useRef } from \"react\"\nimport { WordpressClientContext } from \"../contexts/WordpressClientContext\"\nimport SkeletonClients from '../skeletons/SkeletonClients'\n\nconst Overlay = lazy(() => import('./Overlay'))\n\nconst Clients = () => {\n\n    const { posts } = useContext(WordpressClientContext)\n    const displayedPosts = posts.filter(post => post.acf.display)\n\n    const [isVisible, setVisible] = useState(false)\n    const domRef = useRef()\n\n    useEffect(() => {\n        const observer = new IntersectionObserver(entries => {\n          entries.forEach(entry => {\n            // console.log(`entry`, entry, `is = ${entry.isIntersecting}`)\n            setVisible(entry.isIntersecting)\n          })\n            // entries.forEach(entry => {\n            //     if (entry.isIntersecting) {\n            //         // console.log(`entry`, entry, `is = ${entry.isIntersecting}`)\n            //         setVisible(entry.isIntersecting);\n            //     }\n            // })\n        })\n    \n        const { current } = domRef;\n        observer.observe(current);\n    \n        return () => observer.unobserve(current);\n    }, [])\n\n    return ( \n        <div id=\"clients\" ref={domRef} className={`clients fade-in-section ${ isVisible ? 'is-visible' : '' }`}>\n            <>\n\n                {/* <> */}\n                    <div className=\"clients-container\">\n                        <div className=\"client-heading\">\n                            <h1>we've worked with</h1>\n                        </div>\n\n                        <div className='client-list'>\n                            {displayedPosts && (displayedPosts.map((post) => {\n                                return (\n                                    <div \n                                        key={post.id} \n                                        className='client-item'>\n                                            <img\n                                                src={post.acf.logo.sizes.thumbnail} \n                                                srcSet={\n                                                        `${post.acf.logo.sizes.medium} 150w, \n                                                        ${post.acf.logo.sizes.large} 300w, \n                                                        ${post.acf.logo.sizes['1536x1536']} 494w`} \n                                                alt={post.acf.client_name} />\n                                    </div>\n                                )\n                            }))}\n                            {displayedPosts.length < 1 ? ([1,2,3,4,5,6,7,8,9,10,11,12].map((n) => {\n                                return (\n                                    <div \n                                        key={n}\n                                        className=\"client-item shell\">\n                                        <SkeletonClients />\n                                    </div>\n                                )\n                            })) : ''}\n                        </div>\n                    </div>\n                {/* </> */}\n\n                {/* <> */}\n                    <Suspense fallback={<div className='loading'>Loading...</div>}>\n                        <Overlay title='clients' />\n                    </Suspense>\n                {/* </> */}\n            </>\n        </div>\n     )\n}\n \nexport default Clients;","import React, { createContext, useState, useEffect } from \"react\"\n\nexport const WordpressInfoContext = createContext()\n\nconst WordpressInfoContextProvider = (props) => {\n    const [items, setItems] = useState([])\n\n    useEffect(() => {\n        setTimeout(() => {\n            const loadPost = async () => {\n                const response = await fetch('https://pixldinc.link/pixldcms/wp-json/acf/v3/pages/22?_embed')\n    \n                if(!response.ok) {\n                    console.log(`...not working`)\n                    return\n                }\n                const items = await response.json()\n                setItems(items)\n            }\n    \n            loadPost()\n        }, 0)\n    }, [])\n\n    // console.log(items)\n\n    return (\n        <WordpressInfoContext.Provider value={{ items }}>\n            {props.children}\n        </WordpressInfoContext.Provider>\n    )\n}\n\nexport default WordpressInfoContextProvider","import React from 'react'\nimport Shimmer from './Shimmer'\nimport SkeletonElement from './SkeletonElement'\n\nconst SkeletonConnect = () => {\n\n  return (\n    <div className='skeleton-wrapper'>\n      <div className=\"skeleton-connect\">\n        <SkeletonElement type=\"list\" />\n      </div>\n      <Shimmer />\n    </div>\n  )\n}\n\nexport default SkeletonConnect;","import React, { Suspense, lazy, useContext, useEffect, useState, useRef } from \"react\"\nimport ReactGA from \"react-ga\"\nimport { WordpressInfoContext } from '../contexts/WordpressInfoContext'\nimport SkeletonConnect from '../skeletons/SkeletonConnect'\n\nconst Overlay = lazy(() => import('./Overlay'))\n\nconst Connect = () => {\n\n    const sendLinkClickEvent = (key) => {\n        ReactGA.event({\n            category: 'Link Click',\n            action: key\n        });\n    }\n\n    const [isVisible, setVisible] = useState(false)\n    const domRef = useRef()\n\n    const { items } = useContext(WordpressInfoContext)\n    const { acf } = items\n\n    useEffect(() => {\n        const observer = new IntersectionObserver(entries => {\n          entries.forEach(entry => {\n            // console.log(`entry`, entry, `is = ${entry.isIntersecting}`)\n            setVisible(entry.isIntersecting)\n          })\n            // entries.forEach(entry => {\n            //     if (entry.isIntersecting) {\n            //         // console.log(`entry`, entry, `is = ${entry.isIntersecting}`)\n            //         setVisible(entry.isIntersecting)\n            //     }\n            // })\n        })\n    \n        const { current } = domRef;\n        observer.observe(current);\n    \n        return () => observer.unobserve(current);\n    }, [])\n\n    return ( \n        <div id='connect' ref={domRef} className={`connect fade-in-section ${ isVisible ? 'is-visible' : '' }`}>\n            <>\n                <div className='connect-container'>\n                    <div className=\"connect-heading\">\n                        <h1>connect</h1>\n                    </div>\n                    \n                    <div className='connect-list'>\n                        <div className='socials'>\n                            <h3>socials</h3>\n\n                            {acf && (\n                                <ul>\n                                    <li><a href={acf.twitter} target='_blank' rel='noreferrer' onClick={() => sendLinkClickEvent('twitter')} title={'twitter'}>twitter</a></li>\n                                    <li><a href={acf.facebook} target='_blank' rel='noreferrer' onClick={() => sendLinkClickEvent('facebook')} title={'facebook'}>facebook</a></li>\n                                    <li><a href={acf.linkedin} target='_blank' rel='noreferrer' onClick={() => sendLinkClickEvent('linkedin')} title={'linkedin'}>linkedin</a></li>\n                                </ul>\n                            )}\n                            {!acf && [1,2,3].map((n) => <SkeletonConnect key={n} />)}\n                        </div>\n\n                        <div className='hello'>\n                            <h3>say hello</h3>\n                            \n                            {acf && (\n                                <ul>\n                                    <li><a href={acf.email} target='_blank' rel='noreferrer' onClick={() => sendLinkClickEvent('email')} title={'email'}>hello@pixldinc.com</a></li>\n                                    <li><a href={acf.skype} target='_blank' rel='noreferrer' onClick={() => sendLinkClickEvent('skype')} title={'skype'}>skype call</a></li>\n                                </ul>\n                            )}\n                            {!acf && [1,2].map((n) => <SkeletonConnect key={n} />)}\n                        </div>\n                    </div>\n                </div>\n\n                <Suspense fallback={<div className='loading'>Loading...</div>}>\n                    <Overlay title='connect' />\n                </Suspense>\n            </>\n        </div>\n     )\n}\n \nexport default Connect;\n","import React from 'react'\n\nconst Footer = () => {\n    return ( \n        <div id='footer' className='footer'>\n            &copy;{new Date().getFullYear()} PixlD Inc | All rights reserved\n        </div>\n     );\n}\n \nexport default Footer;","import React, { createContext, useReducer, useState, useEffect } from \"react\"\n\nexport const ThemeContext = createContext()\n\n\nconst initialState = { \n    isDarkTheme: localStorage.getItem('dark') == null ? false : JSON.parse(localStorage.getItem('dark'))\n}\n\nconst themeReducer = (state, action) => {\n    switch (action.type) {\n        case \"LIGHT_MODE\":\n        return { isDarkTheme: false }\n        case \"DARK_MODE\":\n        return { isDarkTheme: true }\n        default:\n        return state\n    }\n}\n\nconst ThemeContextProvider = (props) => {\n    \n    const [isDark, setIsDark] = useState(initialState.isDarkTheme)\n\n    useEffect(() => {\n        const storedTheme = localStorage.getItem('dark')\n        const themeSwitch = document.querySelector('#slider')\n        // console.log(themeSwitch)\n\n\n        if(themeSwitch) {\n            if(storedTheme !== null && storedTheme === 'true') {\n                setIsDark(true)\n                themeSwitch.checked = true\n\n            } else {\n                localStorage.setItem('dark', isDark)\n                setIsDark(false)\n                themeSwitch.checked = false\n            }\n        }\n    }, [isDark])\n\n    \n    const [state, dispatch] = useReducer(themeReducer, initialState);\n\n    return ( \n        <ThemeContext.Provider value={{ state, dispatch }}>\n            {props.children}\n        </ThemeContext.Provider>\n     )\n}\n \nexport default ThemeContextProvider;\n","import React from 'react'\nimport Shimmer from './Shimmer'\nimport SkeletonElement from './SkeletonElement'\n\nconst SkeletonHome = () => {\n\n  return (\n    <div className='skeleton-wrapper'>\n      <div className=\"skeleton-home\">\n        <SkeletonElement type=\"profile\" />\n        <SkeletonElement type=\"profile\" />\n        <SkeletonElement type=\"profile\" />\n        <SkeletonElement type=\"profile\" />\n        <SkeletonElement type=\"profile\" />\n        <SkeletonElement type=\"profile\" />\n        <SkeletonElement type=\"button\" />\n      </div>\n      <Shimmer />\n    </div>\n  )\n}\n\nexport default SkeletonHome;","import React, { Suspense, lazy, useContext, useEffect, useState, useRef } from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport { NavHashLink as Link } from 'react-router-hash-link'\nimport ReactGA from \"react-ga\"\nimport { ThemeContext } from '../contexts/ThemeContext'\nimport { WordpressInfoContext } from \"../contexts/WordpressInfoContext\"\nimport SkeletonHome from '../skeletons/SkeletonHome'\n\nconst Overlay = lazy(() => import('./Overlay'))\n\nconst Header = () => {\n\n    const sendButtonClickEvent = () => {\n        ReactGA.event({\n            category: 'Button Click',\n            action: 'Get in Touch'\n        });\n    }\n\n    const [isVisible, setVisible] = useState(false)\n    const domRef = useRef()\n    \n    const theme = useContext(ThemeContext)\n    const isDarkTheme = theme.state.isDarkTheme\n    \n    const { items } = useContext(WordpressInfoContext)\n    const { acf } = items\n\n    useEffect(() => {\n        const observer = new IntersectionObserver(entries => {\n            entries.forEach(entry => {\n                // console.log(`entry`, entry, `is = ${entry.isIntersecting}`)\n                setVisible(entry.isIntersecting)\n            })\n            // entries.forEach(entry => {\n            //     if (entry.isIntersecting) {\n            //         // console.log(`entry`, entry, `is = ${entry.isIntersecting}`)\n            //         setVisible(entry.isIntersecting);\n            //     }\n            // })\n        });\n    \n        const { current } = domRef;\n        observer.observe(current);\n    \n        return () => observer.unobserve(current);\n    }, [])\n\n    return ( \n        <>\n            <Helmet>\n                <body className={`${isDarkTheme ? \"theme-dark\" : \"theme-light\"}`} />\n            </Helmet>\n            \n            <div id='home' ref={domRef} className={`home fade-in-section ${ isVisible ? 'is-visible' : '' }`}>\n                <>  \n                    {/* <> */}\n                        <div className='home-container'>\n                            <h1>who's <span>PixlD</span>?</h1>\n                            <div className=\"profile\">\n                                {acf && ( \n                                    <>\n                                        <div dangerouslySetInnerHTML={ { __html: acf.mini_profile}} ></div>\n                                        <div className=\"get-in-touch\">\n                                            <Link to='/#connect' title='get in touch' onClick={sendButtonClickEvent}>get in touch</Link>\n                                        </div>\n                                    </>\n                                    )}\n                                {!acf && [1, 2].map((n) => <SkeletonHome key={n} />)}\n                            </div>\n                        </div>\n                    {/* </> */}\n\n                    {/* <> */}\n                        <Suspense fallback={<div className='loading'>Loading...</div>}>\n                            <Overlay title='about' />\n                        </Suspense>\n                    {/* </> */}\n                </>    \n            </div>\n        </>\n     )\n}\n \nexport default Header;\n","import React from \"react\"\n\nconst Logo = () => {\n    return ( \n        <svg width=\"96\" height=\"32\" className=\"pixld-logo-image\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M25.806 3.403C25.806 1.523 27.38 0 29.32 0h26.006c1.94 0 3.513 1.524 3.513 3.403v25.194c0 1.88-1.573 3.403-3.513 3.403H29.32c-1.94 0-3.514-1.524-3.514-3.403V3.403Zm10.784 7.161-4.392-7.232 2.903-1.914a503.2 503.2 0 0 1 4.514 7.516c1.776 3.025.56 6.333-.22 7.326l-4.294 7.326-2.903-1.985c.326-.543.855-1.433 1.457-2.447.794-1.337 1.716-2.889 2.471-4.147 1.396-2.326.864-3.532.541-4.262a8.67 8.67 0 0 1-.078-.18Zm11.459 10.873 4.393 7.23-2.903 1.916a502.842 502.842 0 0 1-4.515-7.515c-1.777-3.025-.563-6.334.218-7.326l4.292-7.328 2.903 1.985c-.325.543-.852 1.43-1.453 2.443l-.003.004c-.794 1.337-1.715 2.89-2.47 4.148-1.395 2.326-.863 3.532-.54 4.262l.078.18Zm-5.726-3.286c.983 0 1.78-.773 1.78-1.726 0-.952-.797-1.725-1.78-1.725-.984 0-1.781.773-1.781 1.725 0 .953.797 1.726 1.78 1.726ZM89.928 7.869a2.8 2.8 0 0 1 2.093.888c.567.59.855 1.291.855 2.098v9.182c0 .84-.288 1.546-.855 2.122-.57.576-1.267.864-2.093.864H81.97V7.869h7.959Zm-9.523-3.312h-1.579v21.5h11.102c.826 0 1.608-.168 2.352-.5a6.39 6.39 0 0 0 1.94-1.324 6.255 6.255 0 0 0 1.3-1.95c.322-.743.48-1.55.48-2.409v-9.187a5.92 5.92 0 0 0-.48-2.362 6.616 6.616 0 0 0-1.3-1.972 5.932 5.932 0 0 0-4.291-1.795h-9.524ZM.163 5.35v3.154h11.703c.6 0 1.108.211 1.53.643.423.432.634.965.634 1.594v.96c0 .61-.21 1.128-.633 1.56a2.075 2.075 0 0 1-1.531.643H0v11.87h3.125v-8.688h8.74c.74 0 1.431-.139 2.07-.422a5.188 5.188 0 0 0 1.675-1.167c.48-.499.859-1.07 1.142-1.718.283-.643.422-1.339.422-2.078v-.96c0-.744-.139-1.44-.422-2.098A5.49 5.49 0 0 0 15.61 6.93a5.22 5.22 0 0 0-1.676-1.152 5.05 5.05 0 0 0-2.068-.427H.163Zm21.46 1.973h-1.266v18.403h1.267V7.322Zm41.142 13.925V7.49h1.306v13.757c0 .432.081.84.245 1.219.163.379.384.715.667.994.278.283.61.509.984.681a2.88 2.88 0 0 0 1.195.255h10.306v1.296H67.162c-.595 0-1.161-.12-1.694-.36a4.617 4.617 0 0 1-1.397-.95 4.445 4.445 0 0 1-.955-1.412 4.35 4.35 0 0 1-.35-1.723Z\"/></svg>\n     );\n}\n \nexport default Logo;","import React, { useContext } from \"react\"\nimport { ThemeContext } from '../contexts/ThemeContext'\n\nconst ThemeToggle = () => {\n\n    const theme = useContext(ThemeContext)\n    const isDarkTheme = theme.state.isDarkTheme\n\n    // console.log(isDarkTheme)\n\n    const handleThemeSwitch = () => {\n        if (isDarkTheme) {\n            theme.dispatch({ type: \"LIGHT_MODE\" })\n            localStorage.setItem('dark', false)\n        } else {\n            theme.dispatch({ type: \"DARK_MODE\" })\n            localStorage.setItem('dark', true)\n        }\n    }\n\n\n    return (\n        <>\n            <input id=\"switch-input\" type=\"checkbox\" onChange={handleThemeSwitch} className=\"switch-input\" />\n            <label htmlFor=\"switch-input\" id=\"switch-label\" className={`switch-label btn ${isDarkTheme ? \"btn-dark\" : \"btn-light\"}`}>\n                <span className=\"slider round\"></span>\n                <div className=\"visually-hidden\">switch input</div>\n            </label>\n        </>\n    )\n}\n \nexport default ThemeToggle;\n","import React from \"react\"\nimport { useLocation } from \"react-router-dom\";\nimport { NavHashLink as Link } from 'react-router-hash-link'\nimport Logo from \"./Logo\";\nimport ThemeToggle from \"./ThemeToggle\";\n\n\nconst Navbar = () => {\n\n    let location = useLocation();\n\n    return ( \n        <nav>\n            <Link to='/#home' className='pixld-logo' title='pixld-logo'>\n                <Logo />\n            </Link>\n            \n            <input className='menu-btn' type='checkbox' id='menu-btn' />\n            <label className='menu-icon' htmlFor='menu-btn'>\n                <span className='nav-icon'></span>\n            </label>\n\n            <ThemeToggle />\n            \n            <ul className=\"menu\">\n                <li><Link to='/#clients' className={`${location.pathname}${location.hash}` === '/#clients' ? \"active\" : \"\"}>clients</Link></li>\n                <li><Link to='/#work' className={`${location.pathname}${location.hash}` === '/#work' ? \"active\" : \"\"}>work</Link></li>\n                <li><Link to='/#connect' className={`${location.pathname}${location.hash}` === '/#connect' ? \"active\" : \"\"}>connect</Link></li>\n            </ul>\n        </nav>\n     )\n}\n \nexport default Navbar;","import React, { createContext, useState, useEffect } from 'react'\n\nexport const WordpressWorkContext = createContext()\n\nconst WordpressWorkContextProvider = (props) => {\n    const [posts, setPosts] = useState([])\n\n    useEffect(() => {\n        setTimeout(() => {\n            const loadPost = async () => {\n                const response = await fetch('https://pixldinc.link/pixldcms/wp-json/acf/v3/work?page=1&per_page=8')\n\n                if(!response.ok) {\n                    console.log(`...no posts`)\n                    return\n                }\n                const posts = await response.json() \n                setPosts(posts)\n            }\n\n            loadPost()\n        }, 0)\n    }, [])\n\n    // console.log(posts)\n\n    return (\n        <WordpressWorkContext.Provider value={{ posts }}>\n            {props.children}\n        </WordpressWorkContext.Provider>\n    )\n}\n\nexport default WordpressWorkContextProvider\n","import React from 'react'\nimport Shimmer from './Shimmer'\nimport SkeletonElement from './SkeletonElement'\n\nconst SkeletonWork = () => {\n\n  return (\n    <div className='skeleton-wrapper'>\n      <div className=\"skeleton-work\">\n        <SkeletonElement type=\"section\" />\n      </div>\n      <Shimmer />\n    </div>\n  )\n}\n\nexport default SkeletonWork;","import React from 'react'\n// import Work from './Work';\n\nconst WorkGallery = ({ onClick, activeIndex, post }) => {\n\n    const project_shots = post.acf.project_shots\n\n    // console.log(post)\n    // console.log(project_shots)\n\n    const closeGallery = () => {\n        onClick(null);\n    }\n\n\n    setTimeout(() => {\n        const gallery = document.querySelector('.gallery');\n        const galleryScroller = gallery.querySelector('.gallery-scroller');\n        const galleryItemSize = galleryScroller.querySelector('div').clientWidth;\n\n        // For paginated scrolling, simply scroll the gallery one item in the given\n        // direction and let css scroll snaping handle the specific alignment.\n        \n        const scrollToNextPage = () => {\n            galleryScroller.scrollBy(galleryItemSize, 0);\n        }\n\n        const scrollToPrevPage = () => {\n            galleryScroller.scrollBy(-galleryItemSize, 0);\n        }\n\n        gallery.querySelector('.btn.next').addEventListener('click', scrollToNextPage);\n        gallery.querySelector('.btn.prev').addEventListener('click', scrollToPrevPage);\n\n    }, 1000)\n\n    return ( \n        <div className=\"project-detail\">\n\n            <div className=\"project-detail-content\">\n                \n                <div className=\"header\">\n                    <p>{post.acf.client} <span>{post.acf.project_type}</span></p>\n                </div>\n                \n                <div className='close'>\n                    <button className=\"go-back\" onClick={closeGallery}>\n                        <span>✕</span>\n                        close\n                    </button>\n                </div>\n\n                <div id=\"gallery\" className=\"gallery\">\n                    <div className=\"gallery-scroller\">\n                        {project_shots.map((shot, index) => {\n                            return (\n                                <div className='colored-card'>\n                                    <img\n                                        key={index}\n                                        className='photo'\n                                        src={shot.shots.sizes.thumbnail} \n                                        srcSet={\n                                                `${shot.shots.sizes.medium} 300w, \n                                                ${shot.shots.sizes.large} 640w, \n                                                ${shot.shots.sizes['1536x1536']} 1000w`} \n                                        alt={post.acf.client} />\n                                </div>\n                            )\n                        })}\n                    </div>\n\n                    <span className=\"btn prev\">‹</span>\n                    <span className=\"btn next\">›</span>\n\n                </div>\n            </div>\n        </div>\n     )\n}\n \nexport default WorkGallery;","import React, { Fragment, Suspense, lazy, useContext, useEffect, useState, useRef } from \"react\"\nimport { WordpressWorkContext } from '../contexts/WordpressWorkContext'\nimport SkeletonWork from '../skeletons/SkeletonWork'\nimport WorkGallery from './WorkGallery'\n\nconst Overlay = lazy(() => import('./Overlay'))\n\nconst Work = () => {\n\n    const [activeIndex, setActiveIndex] = useState(null)\n\n    const showWorkDetail = (index) => {\n        activeIndex ? setActiveIndex(null) : setActiveIndex(index)\n    }\n\n    const closeGallery = (newValue) => {\n        setActiveIndex(newValue);\n    }\n\n    const [isVisible, setVisible] = useState(false)\n    const domRef = useRef()\n\n    const { posts } = useContext(WordpressWorkContext)\n    const displayedPosts = posts.filter(post => post.acf.display)\n\n    useEffect(() => {\n        const observer = new IntersectionObserver(entries => {\n          entries.forEach(entry => {\n            // console.log(`entry`, entry, `is = ${entry.isIntersecting}`)\n            setVisible(entry.isIntersecting)\n          })\n            // entries.forEach(entry => {\n            //     if (entry.isIntersecting) {\n            //         // console.log(`entry`, entry, `is = ${entry.isIntersecting}`)\n            //         setVisible(entry.isIntersecting);\n            //     }\n            // })\n        })\n    \n        const { current } = domRef;\n        observer.observe(current);\n    \n        return () => observer.unobserve(current);\n    }, [])\n\n\n    return ( \n        <div id=\"work\" ref={domRef} className={`work fade-in-section ${ isVisible ? 'is-visible' : '' }`}>\n            <>\n                <div className=\"work-container\">\n                    <h1>selected work</h1>\n\n                    <div className=\"projects\">\n                        <div className=\"project-wrap\">\n\n                            {displayedPosts && (displayedPosts.map((post, index) => {\n                                    return (\n                                        <Fragment key={post.id}>\n                                            <div key={post.id} className=\"section\" onClick={() => showWorkDetail(index)}>\n                                                <div className='content'>\n                                                    <p>{post.acf.client} <span>{post.acf.project_type}</span></p>\n                                                </div>\n                                                <div className=\"overlay\"></div>\n                                                <img\n                                                    src={post.acf.splash.sizes.thumbnail} \n                                                    srcSet={\n                                                            `${post.acf.splash.sizes.medium} 640w, \n                                                            ${post.acf.splash.sizes.large} 960w, \n                                                            ${post.acf.splash.sizes['1536x1536']} 2048w`} \n                                                    alt={post.acf.client} />\n                                            </div>\n                                            \n                                            {activeIndex !== null && activeIndex === index ? (<WorkGallery key={index} activeIndex={activeIndex} onClick={closeGallery} post={post} />) : ''}\n                                        </Fragment>\n                                    )\n                                }))}\n                                {displayedPosts.length < 1 ? ([1,2,3,4,5].map((n) => {\n                                    return (\n                                        <div \n                                            key={n}\n                                            className=\"section shell\">\n                                            <SkeletonWork />\n                                        </div>\n                                    )\n                                })) : ''}\n                        </div>\n                    </div>\n                </div>\n\n                <Suspense fallback={<div className='loading'>Loading...</div>}>\n                    <Overlay title='work' />\n                </Suspense>\n            </>\n        </div>\n    )\n}\n \nexport default Work;","import React from \"react\"\n\nimport { withRouter } from \"react-router\"\nimport ReactGA from \"react-ga\"\n\nconst RouteChangeTracker = ({ history }) => {\n\n    history.listen((location, action) => {\n        ReactGA.set({ page: history.location.pathname + history.location.hash });\n        ReactGA.pageview(history.location.pathname + history.location.hash);\n    })\n\n    return ( \n        <div></div>\n     )\n}\n \nexport default withRouter(RouteChangeTracker);","import React from \"react\"\nimport {Helmet} from \"react-helmet\"\nimport ReactGA from 'react-ga'\nimport Clients from \"./components/Clients\"\nimport Connect from \"./components/Connect\"\nimport Footer from \"./components/Footer\"\nimport Home from \"./components/Home\"\nimport Navbar from \"./components/Navbar\"\nimport Work from \"./components/Work\"\nimport ThemeContextProvider from \"./contexts/ThemeContext\"\nimport WordpressClientContextProvider from \"./contexts/WordpressClientContext\"\nimport WordpressInfoContextProvider from \"./contexts/WordpressInfoContext\"\nimport WordpressWorkContextProvider from \"./contexts/WordpressWorkContext\"\nimport RouteChangeTracker from \"./components/RouteChangeTracker\"\n\nconst TRACKING_ID = \"UA-6814118-1\"\nReactGA.initialize(TRACKING_ID)\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Helmet>\n        {/* Primary Meta Tags */}\n        <title>PixlD - We build beautiful websites</title>\n        <link rel=\"canonical\" href=\"https://pixldinc.com\" />\n        <meta name=\"title\" content=\"PixlD - We build beautiful websites\" />\n        <meta name=\"description\" content=\"We are a boutique, web design & development firm based in sunny Barbados\" />\n\n        {/* Open Graph / Facebook */}\n        <meta name=\"og:type\" content=\"website\" />\n        <meta name=\"og:url\" content=\"https://pixldinc.com/\" />\n        <meta name=\"og:title\" content=\"PixlD - We build beautiful websites\" />\n        <meta name=\"og:description\" content=\"We are a boutique, web design & development firm based in sunny Barbados\" />\n        <meta name=\"og:image\" content=\"https://pixldinc.link/pixldcms/assets/screenshot.png\" />\n\n        {/* Twitter */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:url\" content=\"https://pixldinc.com/\" />\n        <meta name=\"twitter:title\" content=\"PixlD - We build beautiful websites\" />\n        <meta name=\"twitter:description\" content=\"We are a boutique, web design & development firm based in sunny Barbados\" />\n        <meta name=\"twitter:image\" content=\"https://pixldinc.link/pixldcms/assets/screenshot.png\" />\n      </Helmet>\n\n      <ThemeContextProvider>\n        <WordpressInfoContextProvider>\n          <Navbar />\n          <Home />\n        </WordpressInfoContextProvider>\n\n        <WordpressClientContextProvider>\n          <Clients />\n        </WordpressClientContextProvider>\n\n        <WordpressWorkContextProvider>\n          <Work />\n        </WordpressWorkContextProvider>\n        \n        <WordpressInfoContextProvider>\n          <Connect />\n        </WordpressInfoContextProvider>\n        \n        <Footer />\n      </ThemeContextProvider>\n\n      <RouteChangeTracker />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://cra.link/PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then((registration) => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://cra.link/PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch((error) => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then((response) => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log('No internet connection found. App is running in offline mode.');\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then((registration) => {\n          registration.unregister();\n        })\n        .catch((error) => {\n          console.error(error.message);\n        });\n    }\n  }\n  ","import React from 'react'\n// import ReactDOM from 'react-dom'\nimport { hydrate, render } from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport './index.scss'\nimport App from './App'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration'\n\nconst rootElement = document.getElementById(\"root\")\n\nif (rootElement.hasChildNodes()) {\n  hydrate(\n    <Router>\n      <App />\n    </Router>,\n    rootElement\n  )\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: https://cra.link/PWA\n  serviceWorkerRegistration.register()\n} else {\n  render(\n    <Router>\n      <App />\n    </Router>,\n    rootElement\n  )\n}\n"],"sourceRoot":""}